[tool.poetry]
name = "mca-tfm-pco"
version = "0.1.0"
description = ""
authors = ["manu <manloralm@outlook.com>"]
license = "MIT"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[virtualenvs]
create = true
in-project = true

[tool.poetry.dependencies]
python = "^3.10"
uvicorn = "^0.23.2"
ruff = "^0.1.2"
pytest-asyncio = "^0.21.1"
httpx = "^0.25.0"
asyncio = "^3.4.3"
pytest-xdist = "^3.3.1"

[tool.poetry.dev-dependencies]
pytest = "^7.4.2"
yapf = "^0.40.2"
mypy = "^1.6.1"
ruff = "^0.1.1"
fastapi = "^0.104.0"
pytest-xdist = "^3.3.1"
doublex = "^1.9.6"
pylint = "^3.0.1"
expects = "^0.9.0"
doublex-expects = "^0.7.1"
requests = "^2.31.0"
httpx = "^0.25.0"
uvicorn = "^0.23.2"
pydantic = "^2.4.2"
pydantic-settings = "^2.0.3"

[tool.pytest.ini_options]
markers = "asyncio: Allow to run tests with async definition on functions."

[tool.pytest]
pytest_plugins = "pytest_asyncio"

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

# Same as Black.
line-length = 88
indent-width = 4

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
select = ["E4", "E7", "E9", "F"]
ignore = []

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "tab"

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"